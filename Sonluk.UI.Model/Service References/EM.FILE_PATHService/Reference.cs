//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sonluk.UI.Model.EM.FILE_PATHService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EM.FILE_PATHService.FILE_PATHSoap")]
    public interface FILE_PATHSoap {
        
        // CODEGEN: 参数“fileData”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Sonluk.UI.Model.EM.FILE_PATHService.UploadServiceResponse UploadService(Sonluk.UI.Model.EM.FILE_PATHService.UploadServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteFileService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Sonluk.UI.Model.EM.FILE_PATHService.MES_RETURN DeleteFileService(string[] filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetURLByReadID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Sonluk.UI.Model.EM.FILE_PATHService.MES_RETURN GetURLByReadID(int id, string ptoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Read", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Sonluk.UI.Model.EM.FILE_PATHService.EM_FILE_PATH Read(string type, string ptoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReadByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Sonluk.UI.Model.EM.FILE_PATHService.EM_FILE_PATH ReadByID(int pathid, string ptoken);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MES_RETURN : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tYPEField;
        
        private string mESSAGEField;
        
        private int tIDField;
        
        private string gcField;
        
        private string tmField;
        
        private string bhField;
        
        private int xhField;
        
        private int tMSXField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TYPE {
            get {
                return this.tYPEField;
            }
            set {
                this.tYPEField = value;
                this.RaisePropertyChanged("TYPE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MESSAGE {
            get {
                return this.mESSAGEField;
            }
            set {
                this.mESSAGEField = value;
                this.RaisePropertyChanged("MESSAGE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int TID {
            get {
                return this.tIDField;
            }
            set {
                this.tIDField = value;
                this.RaisePropertyChanged("TID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string GC {
            get {
                return this.gcField;
            }
            set {
                this.gcField = value;
                this.RaisePropertyChanged("GC");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TM {
            get {
                return this.tmField;
            }
            set {
                this.tmField = value;
                this.RaisePropertyChanged("TM");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string BH {
            get {
                return this.bhField;
            }
            set {
                this.bhField = value;
                this.RaisePropertyChanged("BH");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int XH {
            get {
                return this.xhField;
            }
            set {
                this.xhField = value;
                this.RaisePropertyChanged("XH");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int TMSX {
            get {
                return this.tMSXField;
            }
            set {
                this.tMSXField = value;
                this.RaisePropertyChanged("TMSX");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EM_FILE_PATH : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int pATHIDField;
        
        private string tYPEField;
        
        private string pATHField;
        
        private string rOLEField;
        
        private string vIRTUALPATHField;
        
        private string iPPATHField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int PATHID {
            get {
                return this.pATHIDField;
            }
            set {
                this.pATHIDField = value;
                this.RaisePropertyChanged("PATHID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TYPE {
            get {
                return this.tYPEField;
            }
            set {
                this.tYPEField = value;
                this.RaisePropertyChanged("TYPE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string PATH {
            get {
                return this.pATHField;
            }
            set {
                this.pATHField = value;
                this.RaisePropertyChanged("PATH");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ROLE {
            get {
                return this.rOLEField;
            }
            set {
                this.rOLEField = value;
                this.RaisePropertyChanged("ROLE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string VIRTUALPATH {
            get {
                return this.vIRTUALPATHField;
            }
            set {
                this.vIRTUALPATHField = value;
                this.RaisePropertyChanged("VIRTUALPATH");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string IPPATH {
            get {
                return this.iPPATHField;
            }
            set {
                this.iPPATHField = value;
                this.RaisePropertyChanged("IPPATH");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadService", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadServiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] Directorys;
        
        public UploadServiceRequest() {
        }
        
        public UploadServiceRequest(string type, byte[] fileData, string fileName, string[] Directorys) {
            this.type = type;
            this.fileData = fileData;
            this.fileName = fileName;
            this.Directorys = Directorys;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadServiceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadServiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Sonluk.UI.Model.EM.FILE_PATHService.MES_RETURN UploadServiceResult;
        
        public UploadServiceResponse() {
        }
        
        public UploadServiceResponse(Sonluk.UI.Model.EM.FILE_PATHService.MES_RETURN UploadServiceResult) {
            this.UploadServiceResult = UploadServiceResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FILE_PATHSoapChannel : Sonluk.UI.Model.EM.FILE_PATHService.FILE_PATHSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FILE_PATHSoapClient : System.ServiceModel.ClientBase<Sonluk.UI.Model.EM.FILE_PATHService.FILE_PATHSoap>, Sonluk.UI.Model.EM.FILE_PATHService.FILE_PATHSoap {
        
        public FILE_PATHSoapClient() {
        }
        
        public FILE_PATHSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FILE_PATHSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FILE_PATHSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FILE_PATHSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Sonluk.UI.Model.EM.FILE_PATHService.UploadServiceResponse Sonluk.UI.Model.EM.FILE_PATHService.FILE_PATHSoap.UploadService(Sonluk.UI.Model.EM.FILE_PATHService.UploadServiceRequest request) {
            return base.Channel.UploadService(request);
        }
        
        public Sonluk.UI.Model.EM.FILE_PATHService.MES_RETURN UploadService(string type, byte[] fileData, string fileName, string[] Directorys) {
            Sonluk.UI.Model.EM.FILE_PATHService.UploadServiceRequest inValue = new Sonluk.UI.Model.EM.FILE_PATHService.UploadServiceRequest();
            inValue.type = type;
            inValue.fileData = fileData;
            inValue.fileName = fileName;
            inValue.Directorys = Directorys;
            Sonluk.UI.Model.EM.FILE_PATHService.UploadServiceResponse retVal = ((Sonluk.UI.Model.EM.FILE_PATHService.FILE_PATHSoap)(this)).UploadService(inValue);
            return retVal.UploadServiceResult;
        }
        
        public Sonluk.UI.Model.EM.FILE_PATHService.MES_RETURN DeleteFileService(string[] filename) {
            return base.Channel.DeleteFileService(filename);
        }
        
        public Sonluk.UI.Model.EM.FILE_PATHService.MES_RETURN GetURLByReadID(int id, string ptoken) {
            return base.Channel.GetURLByReadID(id, ptoken);
        }
        
        public Sonluk.UI.Model.EM.FILE_PATHService.EM_FILE_PATH Read(string type, string ptoken) {
            return base.Channel.Read(type, ptoken);
        }
        
        public Sonluk.UI.Model.EM.FILE_PATHService.EM_FILE_PATH ReadByID(int pathid, string ptoken) {
            return base.Channel.ReadByID(pathid, ptoken);
        }
    }
}
