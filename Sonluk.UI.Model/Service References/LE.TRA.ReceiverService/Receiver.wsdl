<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://Sonluk.com/API/LE/TRA/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://Sonluk.com/API/LE/TRA/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://Sonluk.com/API/LE/TRA/">
      <s:element name="Exists">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="serialNumber" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ExistsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ExistsResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Read">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="city" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReadResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ReadResult" type="tns:ArrayOfCompanyInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfCompanyInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="CompanyInfo" nillable="true" type="tns:CompanyInfo" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="CompanyInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="SerialNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ShortName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CountKey" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="CityID" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="District" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PostCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Telephone" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Contact" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Cellphone" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Fax" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="EMail" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SalesOffices" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ID" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Default" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="Children" type="tns:ArrayOfCompanyInfo" />
          <s:element minOccurs="0" maxOccurs="1" name="General" type="tns:ArrayOfCompanyGeneralInfo" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfCompanyGeneralInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="CompanyGeneralInfo" nillable="true" type="tns:CompanyGeneralInfo" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="CompanyGeneralInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Client" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Number" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CountryKey" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Name1" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Name2" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PostalCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Region" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SortField" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="HouseNumberAndStreet" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FirstTelephoneNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FaxNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SalesOrganization" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SalesOrganizationDescription" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DistributionChannel" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DistributionChannelDescription" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Division" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DivisionDescription" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SalesGroup" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SalesGroupDescription" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Telephone" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="ReadBySerialNumber">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="serialNumber" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReadBySerialNumberResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ReadBySerialNumberResult" type="tns:CompanyInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Select">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="keyword" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SelectResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SelectResult" type="tns:ArrayOfCompanyInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Create">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="node" type="tns:CompanyInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CreateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="CreateResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Update">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="node" type="tns:CompanyInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="UpdateResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="boolean" type="s:boolean" />
      <s:element name="ArrayOfCompanyInfo" nillable="true" type="tns:ArrayOfCompanyInfo" />
      <s:element name="CompanyInfo" nillable="true" type="tns:CompanyInfo" />
    </s:schema>
  </wsdl:types>
  <wsdl:message name="ExistsSoapIn">
    <wsdl:part name="parameters" element="tns:Exists" />
  </wsdl:message>
  <wsdl:message name="ExistsSoapOut">
    <wsdl:part name="parameters" element="tns:ExistsResponse" />
  </wsdl:message>
  <wsdl:message name="ReadSoapIn">
    <wsdl:part name="parameters" element="tns:Read" />
  </wsdl:message>
  <wsdl:message name="ReadSoapOut">
    <wsdl:part name="parameters" element="tns:ReadResponse" />
  </wsdl:message>
  <wsdl:message name="ReadBySerialNumberSoapIn">
    <wsdl:part name="parameters" element="tns:ReadBySerialNumber" />
  </wsdl:message>
  <wsdl:message name="ReadBySerialNumberSoapOut">
    <wsdl:part name="parameters" element="tns:ReadBySerialNumberResponse" />
  </wsdl:message>
  <wsdl:message name="SelectSoapIn">
    <wsdl:part name="parameters" element="tns:Select" />
  </wsdl:message>
  <wsdl:message name="SelectSoapOut">
    <wsdl:part name="parameters" element="tns:SelectResponse" />
  </wsdl:message>
  <wsdl:message name="CreateSoapIn">
    <wsdl:part name="parameters" element="tns:Create" />
  </wsdl:message>
  <wsdl:message name="CreateSoapOut">
    <wsdl:part name="parameters" element="tns:CreateResponse" />
  </wsdl:message>
  <wsdl:message name="UpdateSoapIn">
    <wsdl:part name="parameters" element="tns:Update" />
  </wsdl:message>
  <wsdl:message name="UpdateSoapOut">
    <wsdl:part name="parameters" element="tns:UpdateResponse" />
  </wsdl:message>
  <wsdl:message name="ExistsHttpGetIn">
    <wsdl:part name="serialNumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ExistsHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="ReadHttpGetIn">
    <wsdl:part name="city" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ReadHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfCompanyInfo" />
  </wsdl:message>
  <wsdl:message name="ReadBySerialNumberHttpGetIn">
    <wsdl:part name="serialNumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ReadBySerialNumberHttpGetOut">
    <wsdl:part name="Body" element="tns:CompanyInfo" />
  </wsdl:message>
  <wsdl:message name="SelectHttpGetIn">
    <wsdl:part name="keyword" type="s:string" />
  </wsdl:message>
  <wsdl:message name="SelectHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfCompanyInfo" />
  </wsdl:message>
  <wsdl:message name="ExistsHttpPostIn">
    <wsdl:part name="serialNumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ExistsHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="ReadHttpPostIn">
    <wsdl:part name="city" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ReadHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfCompanyInfo" />
  </wsdl:message>
  <wsdl:message name="ReadBySerialNumberHttpPostIn">
    <wsdl:part name="serialNumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ReadBySerialNumberHttpPostOut">
    <wsdl:part name="Body" element="tns:CompanyInfo" />
  </wsdl:message>
  <wsdl:message name="SelectHttpPostIn">
    <wsdl:part name="keyword" type="s:string" />
  </wsdl:message>
  <wsdl:message name="SelectHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfCompanyInfo" />
  </wsdl:message>
  <wsdl:portType name="ReceiverSoap">
    <wsdl:operation name="Exists">
      <wsdl:input message="tns:ExistsSoapIn" />
      <wsdl:output message="tns:ExistsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Read">
      <wsdl:input message="tns:ReadSoapIn" />
      <wsdl:output message="tns:ReadSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ReadBySerialNumber">
      <wsdl:input message="tns:ReadBySerialNumberSoapIn" />
      <wsdl:output message="tns:ReadBySerialNumberSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Select">
      <wsdl:input message="tns:SelectSoapIn" />
      <wsdl:output message="tns:SelectSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Create">
      <wsdl:input message="tns:CreateSoapIn" />
      <wsdl:output message="tns:CreateSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Update">
      <wsdl:input message="tns:UpdateSoapIn" />
      <wsdl:output message="tns:UpdateSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ReceiverHttpGet">
    <wsdl:operation name="Exists">
      <wsdl:input message="tns:ExistsHttpGetIn" />
      <wsdl:output message="tns:ExistsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Read">
      <wsdl:input message="tns:ReadHttpGetIn" />
      <wsdl:output message="tns:ReadHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ReadBySerialNumber">
      <wsdl:input message="tns:ReadBySerialNumberHttpGetIn" />
      <wsdl:output message="tns:ReadBySerialNumberHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Select">
      <wsdl:input message="tns:SelectHttpGetIn" />
      <wsdl:output message="tns:SelectHttpGetOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ReceiverHttpPost">
    <wsdl:operation name="Exists">
      <wsdl:input message="tns:ExistsHttpPostIn" />
      <wsdl:output message="tns:ExistsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Read">
      <wsdl:input message="tns:ReadHttpPostIn" />
      <wsdl:output message="tns:ReadHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ReadBySerialNumber">
      <wsdl:input message="tns:ReadBySerialNumberHttpPostIn" />
      <wsdl:output message="tns:ReadBySerialNumberHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Select">
      <wsdl:input message="tns:SelectHttpPostIn" />
      <wsdl:output message="tns:SelectHttpPostOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ReceiverSoap" type="tns:ReceiverSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="Exists">
      <soap:operation soapAction="http://Sonluk.com/API/LE/TRA/Exists" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Read">
      <soap:operation soapAction="http://Sonluk.com/API/LE/TRA/Read" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReadBySerialNumber">
      <soap:operation soapAction="http://Sonluk.com/API/LE/TRA/ReadBySerialNumber" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Select">
      <soap:operation soapAction="http://Sonluk.com/API/LE/TRA/Select" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Create">
      <soap:operation soapAction="http://Sonluk.com/API/LE/TRA/Create" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Update">
      <soap:operation soapAction="http://Sonluk.com/API/LE/TRA/Update" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ReceiverSoap12" type="tns:ReceiverSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="Exists">
      <soap12:operation soapAction="http://Sonluk.com/API/LE/TRA/Exists" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Read">
      <soap12:operation soapAction="http://Sonluk.com/API/LE/TRA/Read" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReadBySerialNumber">
      <soap12:operation soapAction="http://Sonluk.com/API/LE/TRA/ReadBySerialNumber" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Select">
      <soap12:operation soapAction="http://Sonluk.com/API/LE/TRA/Select" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Create">
      <soap12:operation soapAction="http://Sonluk.com/API/LE/TRA/Create" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Update">
      <soap12:operation soapAction="http://Sonluk.com/API/LE/TRA/Update" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ReceiverHttpGet" type="tns:ReceiverHttpGet">
    <http:binding verb="GET" />
    <wsdl:operation name="Exists">
      <http:operation location="/Exists" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Read">
      <http:operation location="/Read" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReadBySerialNumber">
      <http:operation location="/ReadBySerialNumber" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Select">
      <http:operation location="/Select" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ReceiverHttpPost" type="tns:ReceiverHttpPost">
    <http:binding verb="POST" />
    <wsdl:operation name="Exists">
      <http:operation location="/Exists" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Read">
      <http:operation location="/Read" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReadBySerialNumber">
      <http:operation location="/ReadBySerialNumber" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Select">
      <http:operation location="/Select" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Receiver">
    <wsdl:port name="ReceiverSoap" binding="tns:ReceiverSoap">
      <soap:address location="http://192.168.0.132/API/LE/TRA/Receiver.asmx" />
    </wsdl:port>
    <wsdl:port name="ReceiverSoap12" binding="tns:ReceiverSoap12">
      <soap12:address location="http://192.168.0.132/API/LE/TRA/Receiver.asmx" />
    </wsdl:port>
    <wsdl:port name="ReceiverHttpGet" binding="tns:ReceiverHttpGet">
      <http:address location="http://192.168.0.132/API/LE/TRA/Receiver.asmx" />
    </wsdl:port>
    <wsdl:port name="ReceiverHttpPost" binding="tns:ReceiverHttpPost">
      <http:address location="http://192.168.0.132/API/LE/TRA/Receiver.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>